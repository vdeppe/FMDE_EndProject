package FMDE_End.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;

public class composition_Constraints extends BaseConstraintsDescriptor {
  public composition_Constraints() {
    super(MetaAdapterFactory.getConcept(0xd0a0492b832b46e1L, 0x9328665a3140e72eL, 0x322424eea67db0e5L, "FMDE_End.structure.composition"));
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(MetaAdapterFactory.getReferenceLink(0xd0a0492b832b46e1L, 0x9328665a3140e72eL, 0x322424eea67db0e5L, 0x2b06f517158a67bdL, "from"), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xd0a0492b832b46e1L, 0x9328665a3140e72eL, 0x322424eea67db0e5L, 0x2b06f517158a67bdL), this) {
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {};
      }
    });
    references.put(MetaAdapterFactory.getReferenceLink(0xd0a0492b832b46e1L, 0x9328665a3140e72eL, 0x322424eea67db0e5L, 0x2b06f517158a67bfL, "to"), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xd0a0492b832b46e1L, 0x9328665a3140e72eL, 0x322424eea67db0e5L, 0x2b06f517158a67bfL), this) {
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {};
      }
    });
    return references;
  }
}
